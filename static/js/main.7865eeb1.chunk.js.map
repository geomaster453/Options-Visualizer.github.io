{"version":3,"sources":["components/App/App.js","components/Chart/Chart.js","components/Ticker/Ticker.js","serviceWorker.js","index.js"],"names":["App","className","src","style","verticalAlign","alt","Chart","info","chartLabels","verticalLines","pldata","dataLabel","high","intQuote","Math","round","quote","low","type","mode","scaleID","value","borderColor","borderWidth","label","backgroundColor","content","enabled","state","labels","datasets","fill","lineTension","data","options","title","display","text","ticker","fontSize","legend","position","scales","yAxes","scaleLabel","labelString","ticks","callback","index","values","xAxes","annotation","drawTime","annotations","Ticker","useState","curinput","setCurinput","disabled","setDisabled","setTicker","setQuote","setHigh","setLow","finnhub","require","ApiClient","instance","authentications","apiKey","process","REACT_APP_API_KEY","finnhubClient","DefaultApi","tick","a","fetch","REACT_APP_IEX_API_KEY","response","json","onSubmit","event","cleanInput","trim","toUpperCase","getHighLow","then","week52High","week52Low","error","c","preventDefault","paddingRight","placeholder","onChange","target","undefined","Button","variant","float","borderRadius","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"sSAiBeA,MAdf,WACE,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,uDAGA,yBAAKC,IAA8B,eAAgBC,MAAO,CAACC,cAAe,UAAWC,IAAI,a,+DCmHlFC,MAvHf,SAAeC,GACb,IAAIC,EAAc,GACdC,EAAgB,GAChBC,EAAS,GACTC,EAAY,GAEhB,GAAkB,IAAdJ,EAAKK,KAAW,CAClB,IAAMC,EAAyC,GAA9BC,KAAKC,MAAMR,EAAKS,MAAQ,IACzCN,EAAS,EAAE,KAAM,IAA+B,KAAzBH,EAAKS,MAAQH,GAAkB,IAA8B,KAAxBN,EAAKK,KAAOC,GAAkB,IAAK,GAAKN,EAAKK,KAAOC,GAAY,IAAM,KAClIF,EAAY,QAAUE,EAAW,eACjCL,EAAc,CAAC,EAAGD,EAAKU,IAAKV,EAAKS,MAAOT,EAAKK,KAAML,EAAKK,KAAOL,EAAKK,KAAOL,EAAKS,OAChFP,EAAgB,CACd,CACES,KAAM,OACNC,KAAM,WACNC,QAAS,WACTC,MAAO,EACPC,YAAa,UACbC,YAAa,EACbC,MAAO,CACLC,gBAAiB,UACjBC,QAAS,YACTC,SAAS,IAGb,CACET,KAAM,OACNC,KAAM,WACNC,QAAS,WACTC,MAAO,EACPC,YAAa,UACbC,YAAa,EACbC,MAAO,CACLC,gBAAiB,UACjBC,QAAS,gBACTC,SAAS,IAGb,CACET,KAAM,OACNC,KAAM,WACNC,QAAS,WACTC,MAAO,EACPC,YAAa,UACbC,YAAa,EACbC,MAAO,CACLC,gBAAiB,UACjBC,QAAS,aACTC,SAAS,KAKjB,IAAMC,EAAQ,CACZC,OAAQrB,EACRsB,SAAU,CACR,CAEEN,MAAOb,EACPoB,MAAM,EACNC,YAAa,EACbP,gBAAiB,qBACjBH,YAAa,gBACbC,YAAa,EACbU,KAAMvB,KAKZ,OACE,yBAAKT,UAAU,aACb,kBAAC,IAAD,CACEgC,KAAML,EACNM,QAAS,CACPC,MAAM,CACJC,SAAQ,EACRC,KAAM9B,EAAK+B,OAAS,qBACpBC,SAAS,IAEXC,OAAO,CACLJ,SAAQ,EACRK,SAAS,SAEXC,OAAO,CACLC,MAAO,CAAC,CACNC,WAAY,CACVR,SAAS,EACTS,YAAa,iBACbN,SAAU,IAEZO,MAAO,CACLC,SAAU,SAAS1B,EAAO2B,EAAOC,GAC/B,MAAO,IAAM5B,MAInB6B,MAAO,CAAC,CACNN,WAAY,CACVR,SAAS,EACTS,YAAa,sBACbN,SAAU,IAEZO,MAAO,CACLC,SAAU,SAAS1B,EAAO2B,EAAOC,GAC/B,MAAO,IAAM5B,OAKrB8B,WAAY,CACVC,SAAU,qBACVC,YAAa5C,Q,QCvDV6C,MAzDf,WAAmB,IAAD,EACgBC,mBAAS,IADzB,mBACTC,EADS,KACCC,EADD,OAEgBF,oBAAS,GAFzB,mBAETG,EAFS,KAECC,EAFD,OAGYJ,mBAAS,IAHrB,mBAGTjB,EAHS,KAGDsB,EAHC,OAIUL,mBAAS,IAJnB,mBAITvC,EAJS,KAIF6C,EAJE,OAKQN,mBAAS,GALjB,mBAKT3C,EALS,KAKHkD,EALG,OAMMP,mBAAS,GANf,mBAMTtC,EANS,KAMJ8C,EANI,KAQVC,EAAUC,EAAQ,KAERD,EAAQE,UAAUC,SAASC,gBAA3B,QACRC,OAASC,mHAAYC,kBAC7B,IAAMC,EAAgB,IAAIR,EAAQS,WAZlB,4CAwBhB,WAA0BC,GAA1B,iBAAAC,EAAA,sEACuBC,MAAM,0CAA4CF,EAAO,gBAAkBJ,mHAAYO,uBAD9G,cACMC,EADN,gBAEmBA,EAASC,OAF5B,cAEM9C,EAFN,yBAGSA,GAHT,4CAxBgB,sBA0ChB,OACE,6BACE,yBAAKhC,UAAU,cACb,0BAAM+E,SAhBZ,SAAsBC,GACpB,IAAIC,EAAa1B,EAAS2B,OAAOC,eA9BnB,4CA+BdC,CAAWH,GAAYI,MAAK,SAAArD,GAC1B6B,EAAQ7B,EAAKsD,YACbxB,EAAO9B,EAAKuD,cAEdhB,EAAcxD,MAAMkE,GAAY,SAACO,EAAOxD,EAAM6C,GAC5CjB,EAAS5B,EAAKyD,MAEhB9B,EAAUsB,GACVD,EAAMU,mBAOA,2BAAOxF,MAAO,CAACyF,aAAa,QAC1B,2BAAO1E,KAAK,OAAO2E,YAAY,2BAA2BxE,MAAOmC,EAAUsC,SAjCrF,SAAsBb,GACpBT,EAAcxD,MAAMiE,EAAMc,OAAO1E,MAAM8D,OAAOC,eAAe,SAACK,EAAOxD,EAAM6C,QAC1DkB,IAAX/D,EAAKyD,EACP/B,GAAY,GAEZA,GAAY,MAGhBF,EAAYwB,EAAMc,OAAO1E,QAyBkFpB,UAAU,sBAE/G,kBAACgG,EAAA,EAAD,CAAQC,QAAQ,kBAAkBhF,KAAK,SAASwC,SAAYA,EAAUvD,MAAO,CAACgG,MAAM,SAAUC,aAAc,QAA5G,WAGH,kBAAC,EAAD,CAAO9D,OAAQA,EAAQtB,MAAOA,EAAOJ,KAAMA,EAAMK,IAAKA,MC7CzCoF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3B,MAAK,SAAA4B,GACJA,EAAaC,gBAEdC,OAAM,SAAA3B,GACL4B,QAAQ5B,MAAMA,EAAM6B,a","file":"static/js/main.7865eeb1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          Options Visualizer &nbsp;    \n        \n        <img src={process.env.PUBLIC_URL + '/favicon.ico'} style={{verticalAlign: \"middle\"}} alt=\"Logo\"></img>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport './Chart.css';\nimport {Line} from 'react-chartjs-2';\nimport 'chartjs-plugin-annotation';\n\n\nfunction Chart(info) {\n  let chartLabels = []; \n  let verticalLines = [];\n  let pldata = []\n  let dataLabel = \"\";\n\n  if (info.high !== 0){\n    const intQuote = Math.round(info.quote / 10) * 10;\n    pldata = [-150, -150, (info.quote - intQuote) * 100 - 150, (info.high - intQuote) * 100 - 150, 2 * (info.high - intQuote) * 100 - 150]\n    dataLabel = \"Long \" + intQuote + \" call @ 1.50\";\n    chartLabels = [0, info.low, info.quote, info.high, info.high + info.high - info.quote];\n    verticalLines = [\n      {\n        type: \"line\",\n        mode: \"vertical\",\n        scaleID: \"x-axis-0\",\n        value: 1,\n        borderColor: \"#38677D\",\n        borderWidth: 5,\n        label: {\n          backgroundColor: \"#959296\",\n          content: \"52 wk Low\",\n          enabled: true\n        }\n      },\n      {\n        type: \"line\",\n        mode: \"vertical\",\n        scaleID: \"x-axis-0\",\n        value: 2,\n        borderColor: \"#38677D\",\n        borderWidth: 5,\n        label: {\n          backgroundColor: \"#959296\",\n          content: \"Current Price\",\n          enabled: true\n        }\n      } , \n      {\n        type: \"line\",\n        mode: \"vertical\",\n        scaleID: \"x-axis-0\",\n        value: 3,\n        borderColor: \"#38677D\",\n        borderWidth: 5,\n        label: {\n          backgroundColor: \"#959296\",\n          content: \"52 wk High\",\n          enabled: true\n        }\n      }      \n    ];\n  }\n  const state = {\n    labels: chartLabels,\n    datasets: [\n      {\n        \n        label: dataLabel,\n        fill: false,\n        lineTension: 0,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: pldata,\n      }\n    ]\n  }\n\n  return (\n    <div className=\"Chart-div\">\n      <Line\n        data={state}\n        options={{\n          title:{\n            display:true,\n            text: info.ticker + \" Profit/Loss Chart\",\n            fontSize:20\n          },\n          legend:{\n            display:true,\n            position:'right'\n          },\n          scales:{\n            yAxes: [{\n              scaleLabel: {\n                display: true, \n                labelString: 'Profit or Loss',\n                fontSize: 18\n              },\n              ticks: {\n                callback: function(value, index, values) { \n                  return '$' + value;\n                }\n              }\n            }],\n            xAxes: [{\n              scaleLabel: {\n                display: true, \n                labelString: 'Price at Expiration',\n                fontSize: 18\n              },\n              ticks: {\n                callback: function(value, index, values) { \n                  return '$' + value;\n                }\n              }\n            }]\n          }, \n          annotation: {\n            drawTime: 'beforeDatasetsDraw',\n            annotations: verticalLines,\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Chart;\n","import React, { useState } from 'react';\nimport './Ticker.css';\nimport Chart from '../Chart/Chart'\nimport Button from 'react-bootstrap/Button';\n\nfunction Ticker() {\n  const [curinput, setCurinput] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [ticker, setTicker] = useState('');\n  const [quote, setQuote] = useState('');\n  const [high, setHigh] = useState(0); \n  const [low, setLow] = useState(0);\n\n  const finnhub = require('finnhub');\n  \n  const api_key = finnhub.ApiClient.instance.authentications['api_key'];\n  api_key.apiKey = process.env.REACT_APP_API_KEY; \n  const finnhubClient = new finnhub.DefaultApi()\n   \n  function handleChange(event) {\n    finnhubClient.quote(event.target.value.trim().toUpperCase(), (error, data, response) => {\n      if (data.c !== undefined){ \n        setDisabled(false);\n      } else{ \n        setDisabled(true);\n      }\n    });\n    setCurinput(event.target.value);\n  }\n  async function getHighLow(tick) { \n    let response = await fetch('https://cloud.iexapis.com/stable/stock/' + tick + '/quote?token=' + process.env.REACT_APP_IEX_API_KEY);\n    let data = await response.json();\n    return data;\n  }\n  function handleSubmit(event) {\n    let cleanInput = curinput.trim().toUpperCase();\n    getHighLow(cleanInput).then(data => {\n      setHigh(data.week52High);\n      setLow(data.week52Low);\n    });\n    finnhubClient.quote(cleanInput, (error, data, response) => {\n      setQuote(data.c)\n    });    \n    setTicker(cleanInput); \n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <div className=\"Ticker-div\"> \n        <form onSubmit={handleSubmit}>\n          <label style={{paddingRight:\"5px\"}}>\n            <input type=\"text\" placeholder=\"Enter Ticker Symbol Here\" value={curinput} onChange={handleChange} className=\"Ticker-searchbar\" />\n          </label>\n          <Button variant=\"outline-primary\" type=\"submit\" disabled = {disabled} style={{float:\"center\", borderRadius: \"0px\"}}>Enter</Button>\n        </form>\n      </div>\n       <Chart ticker={ticker} quote={quote} high={high} low={low} />\n    </div>\n  );\n}\n\nexport default Ticker;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport Ticker from './components/Ticker/Ticker'\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Ticker />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}